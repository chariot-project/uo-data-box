# web service development compose file
version: "3"

networks:
  stream:
  api:

services:
  stream-server:
    container_name: ${UO_INSTANCE}-web-stream
    build: ../../../
    image: uo-${UO_INSTANCE}/node
    networks:
      - stream
    expose:
      - 3000
    logging:
      driver: "json-file"
      options:
        max-size: "1024k"
        max-file: "10"
    environment:
      - UO_DB_HOST
      - UO_DB_PORT
      - UO_DB_USER
      - UO_DB_PASS
      - UO_DB_NAME
      - UO_DB_ORGANISATION
      - UO_DB_SYSTEM
      - UO_WEBSOCKET_SERVER_PORT=3000
      - UO_BROKER_QUEUE_STREAM=${UO_STREAM_QUEUE}
      - UO_BROKER_AMQP_HOST=${UO_STREAM_AMQP_HOST}
      - UO_BROKER_AMQP_PORT=${UO_STREAM_AMQP_PORT}
      - UO_BROKER_AMQP_USERNAME=${UO_STREAM_AMQP_USERNAME}
      - UO_BROKER_AMQP_PASSWORD=${UO_STREAM_AMQP_PASSWORD}
    volumes:
      - ../../:/usr/src/app/src:ro
    entrypoint:
      - npm
      - run
      - start:stream
      - --
      - --verbose

  api-server:
    container_name: ${UO_INSTANCE}-web-api
    build: ../../../
    image: uo-${UO_INSTANCE}/node
    networks:
      - api
    expose:
      - 3001
    ports:
      - 3001:3001
    logging:
      driver: "json-file"
      options:
        max-size: "1024k"
        max-file: "10"
    environment:
      - UO_BROKER_QUEUE_STREAM=${UO_STREAM_QUEUE}
      - UO_BROKER_AMQP_HOST=${UO_STREAM_AMQP_HOST}
      - UO_BROKER_AMQP_PORT=${UO_STREAM_AMQP_PORT}
      - UO_BROKER_AMQP_USERNAME=${UO_STREAM_AMQP_USERNAME}
      - UO_BROKER_AMQP_PASSWORD=${UO_STREAM_AMQP_PASSWORD}
      - UO_DB_HOST
      - UO_DB_PORT
      - UO_DB_USER
      - UO_DB_PASS
      - UO_DB_NAME
      - UO_DB_ORGANISATION
      - UO_DB_SYSTEM
      - UO_WEB_FILE_BASE
      - UO_API_BASE
      - UO_API_URL_EXCLUSIONS
    volumes:
      - ../../:/usr/src/app/src:ro
    entrypoint:
      - npm
      - run
      - start:api
      - --
      - --verbose
